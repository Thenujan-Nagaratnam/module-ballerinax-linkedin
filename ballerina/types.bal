// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

public type Locale record {
    # The country part of the locale.
    string country?;
    # The language part of the locale.
    string language?;
};

public type inline_response_200_1_value record {
    inline_response_200_1_value_uploadMechanism uploadMechanism?;
    # URN of the media artifact.
    string mediaArtifact?;
    # URN of the digital media asset.
    string asset?;
};

public type inline_response_200_1_value_uploadMechanism_com\.linkedin\.digitalmedia\.uploading\.MediaUploadHttpRequest record {
    string uploadUrl?;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

public type assets_body record {
    assets_registerUploadRequest registerUploadRequest?;
};

# Represents the Queries record for the operation: registerUpload
public type RegisterUploadQueries record {
    string action;
};

public type ugcPosts_specificContent_com\.linkedin\.ugc\.ShareContent_shareCommentary record {
    string text?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

public type assets_registerUploadRequest record {
    string[] recipes?;
    # URN of the person uploading the media (e.g., "urn:li:person:12345").
    string owner?;
    assets_registerUploadRequest_serviceRelationships[] serviceRelationships?;
};

public type inline_response_200_1 record {
    inline_response_200_1_value value?;
};

public type inline_response_200 record {
    # Subject Identifier
    string sub?;
    # Full name of the member
    string name?;
    # Member's first name
    string given_name?;
    # Member's last name
    string family_name?;
    # URL of the member's profile picture
    string picture?;
    Locale locale?;
    # Primary email address of the member (optional)
    string email?;
    # Whether the member's email has been verified (optional)
    boolean email_verified?;
};

public type assets_registerUploadRequest_serviceRelationships record {
    string relationshipType?;
    string identifier?;
};

public type inline_response_200_1_value_uploadMechanism record {
    inline_response_200_1_value_uploadMechanism_com\.linkedin\.digitalmedia\.uploading\.MediaUploadHttpRequest com\.linkedin\.digitalmedia\.uploading\.MediaUploadHttpRequest?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};
